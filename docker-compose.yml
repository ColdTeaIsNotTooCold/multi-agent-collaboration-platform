version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ccpm-postgres
    environment:
      POSTGRES_DB: ccpm
      POSTGRES_USER: ccpm_user
      POSTGRES_PASSWORD: ccpm_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ccpm_user -d ccpm"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ccpm-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ccpm-backend
    environment:
      DATABASE_URL: "postgresql://ccpm_user:ccpm_password@postgres:5432/ccpm"
      JWT_SECRET: "your-secret-key-change-in-production"
      PORT: 3000
      NODE_ENV: "production"
      CORS_ORIGIN: "http://localhost:3001"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
    networks:
      - ccpm-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ccpm-frontend
    environment:
      VITE_API_URL: "http://localhost:3000"
      VITE_WS_URL: "ws://localhost:3000"
    ports:
      - "3001:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ccpm-network

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: ccpm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ccpm-network
    profiles:
      - production

volumes:
  postgres_data:

networks:
  ccpm-network:
    driver: bridge